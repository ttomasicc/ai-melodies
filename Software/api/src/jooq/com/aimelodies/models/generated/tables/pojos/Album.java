/*
 * This file is generated by jOOQ.
 */
package com.aimelodies.models.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Album implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Long artistId;
    private final String image;
    private final String title;
    private final LocalDate dateCreated;
    private final String description;

    public Album(Album value) {
        this.id = value.id;
        this.artistId = value.artistId;
        this.image = value.image;
        this.title = value.title;
        this.dateCreated = value.dateCreated;
        this.description = value.description;
    }

    public Album(
        Long id,
        Long artistId,
        String image,
        String title,
        LocalDate dateCreated,
        String description
    ) {
        this.id = id;
        this.artistId = artistId;
        this.image = image;
        this.title = title;
        this.dateCreated = dateCreated;
        this.description = description;
    }

    /**
     * Getter for <code>public.album.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.album.artist_id</code>.
     */
    public Long getArtistId() {
        return this.artistId;
    }

    /**
     * Getter for <code>public.album.image</code>.
     */
    public String getImage() {
        return this.image;
    }

    /**
     * Getter for <code>public.album.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Getter for <code>public.album.date_created</code>.
     */
    public LocalDate getDateCreated() {
        return this.dateCreated;
    }

    /**
     * Getter for <code>public.album.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Album other = (Album) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.artistId == null) {
            if (other.artistId != null)
                return false;
        }
        else if (!this.artistId.equals(other.artistId))
            return false;
        if (this.image == null) {
            if (other.image != null)
                return false;
        }
        else if (!this.image.equals(other.image))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.dateCreated == null) {
            if (other.dateCreated != null)
                return false;
        }
        else if (!this.dateCreated.equals(other.dateCreated))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.artistId == null) ? 0 : this.artistId.hashCode());
        result = prime * result + ((this.image == null) ? 0 : this.image.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.dateCreated == null) ? 0 : this.dateCreated.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Album (");

        sb.append(id);
        sb.append(", ").append(artistId);
        sb.append(", ").append(image);
        sb.append(", ").append(title);
        sb.append(", ").append(dateCreated);
        sb.append(", ").append(description);

        sb.append(")");
        return sb.toString();
    }
}
