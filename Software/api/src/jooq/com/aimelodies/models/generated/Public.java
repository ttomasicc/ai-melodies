/*
 * This file is generated by jOOQ.
 */
package com.aimelodies.models.generated;


import com.aimelodies.models.generated.tables.Album;
import com.aimelodies.models.generated.tables.AlbumMelody;
import com.aimelodies.models.generated.tables.Artist;
import com.aimelodies.models.generated.tables.FlywaySchemaHistory;
import com.aimelodies.models.generated.tables.Genre;
import com.aimelodies.models.generated.tables.Melody;
import com.aimelodies.models.generated.tables.Shedlock;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.album</code>.
     */
    public final Album ALBUM = Album.ALBUM;

    /**
     * The table <code>public.album_melody</code>.
     */
    public final AlbumMelody ALBUM_MELODY = AlbumMelody.ALBUM_MELODY;

    /**
     * The table <code>public.artist</code>.
     */
    public final Artist ARTIST = Artist.ARTIST;

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>public.genre</code>.
     */
    public final Genre GENRE = Genre.GENRE;

    /**
     * The table <code>public.melody</code>.
     */
    public final Melody MELODY = Melody.MELODY;

    /**
     * The table <code>public.shedlock</code>.
     */
    public final Shedlock SHEDLOCK = Shedlock.SHEDLOCK;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Album.ALBUM,
            AlbumMelody.ALBUM_MELODY,
            Artist.ARTIST,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Genre.GENRE,
            Melody.MELODY,
            Shedlock.SHEDLOCK
        );
    }
}
